apply plugin: 'com.android.application'


apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

apply plugin: 'com.akaita.android.easylauncher'
android {
    compileSdkVersion rootProject.compileSdkVersion


    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "cn.wsgwz.myapplication"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //vectorDrawables.useSupportLibrary true

        //renderscriptTargetApi 25
        //renderscriptSupportModeEnabled true
        multiDexEnabled true
    }


    signingConfigs {

        release {
            storeFile file("simple.jks")
            storePassword "123456"
            keyAlias "wsgwz"
            keyPassword "123456"
        }

        debug {
            storeFile file("simple.jks")
            storePassword "123456"
            keyAlias "wsgwz"
            keyPassword "123456"
        }

    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'


        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // work-runtime-ktx 2.1.0 and above now requires Java 8
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.all {
        outputFileName = "${applicationId}.apk"
        //outputFileName = "${applicationId}_${releaseTime()}.apk"
    }
}


easylauncher {
    buildTypes {
        debug {
            // Add two more filters to all `beta` variants
            filters = [
                    customColorRibbonFilter("测试", "#556600CC", "#FFFFFF", "topLeft", 0.2)
                    //customColorRibbonFilter("https测试", "#556600CC", "#FFFFFF", "topLeft", 0.12)
            ]
        }
    }


}

def releaseTime() {
    return new Date().format("yyyyMMddHHmm")
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.work:work-runtime-ktx:$rootProject.workVersion"
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"

    // Testing dependencies
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.testExtJunit"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$rootProject.uiAutomatorVersion"
    androidTestImplementation "androidx.work:work-testing:$rootProject.workVersion"
    androidTestImplementation "com.google.truth:truth:$rootProject.truthVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"

    //kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion" // Dagger 2 注解处理

    //implementation project(':basemodule')
    implementation project(':common')

    //https://github.com/razerdp/BasePopup
    implementation 'com.github.razerdp:BasePopup:2.1.8'

    //https://github.com/wanglu1209/PhotoViewer
    implementation 'com.github.wanglu1209:PhotoViewer:0.49'


    //https://dagger.dev/android
    //https://stackoverflow.com/questions/52679385/dagger2-with-androidx-supportfragmentinjector-issue
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"


    implementation project(':basemodule')

}
